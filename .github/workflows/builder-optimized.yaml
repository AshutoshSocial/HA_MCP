name: Optimized Builder

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'mcp-server/**'
      - '.github/workflows/builder-optimized.yaml'

env:
  ADDON_NAME: mcp-server
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        arch: [aarch64, amd64, armhf, armv7, i386]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host
            image=moby/buildkit:master

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get base image for architecture
        id: base
        run: |
          case "${{ matrix.arch }}" in
            aarch64) echo "base_image=ghcr.io/home-assistant/aarch64-base:3.21" >> $GITHUB_OUTPUT ;;
            amd64)   echo "base_image=ghcr.io/home-assistant/amd64-base:3.21" >> $GITHUB_OUTPUT ;;
            armhf)   echo "base_image=ghcr.io/home-assistant/armhf-base:3.21" >> $GITHUB_OUTPUT ;;
            armv7)   echo "base_image=ghcr.io/home-assistant/armv7-base:3.21" >> $GITHUB_OUTPUT ;;
            i386)    echo "base_image=ghcr.io/home-assistant/i386-base:3.21" >> $GITHUB_OUTPUT ;;
          esac

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.ADDON_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,prefix={{branch}}-
            type=raw,value=${{ matrix.arch }}-latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ env.ADDON_NAME }}
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_FROM=${{ steps.base.outputs.base_image }}
          cache-from: |
            type=gha,scope=${{ matrix.arch }}
            type=registry,ref=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.ADDON_NAME }}:${{ matrix.arch }}-latest
          cache-to: |
            type=gha,mode=max,scope=${{ matrix.arch }}
            type=inline
          provenance: false
          sbom: false

  create-manifest:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          MANIFEST_NAME="${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.ADDON_NAME }}:latest"
          
          docker manifest create $MANIFEST_NAME \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.ADDON_NAME }}:aarch64-latest \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.ADDON_NAME }}:amd64-latest \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.ADDON_NAME }}:armhf-latest \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.ADDON_NAME }}:armv7-latest \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.ADDON_NAME }}:i386-latest
          
          docker manifest push $MANIFEST_NAME