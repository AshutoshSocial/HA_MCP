name: Update Changelog

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number for changelog entry'
        required: true
        type: string

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for commit analysis
      
      - name: Get release info
        id: release
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "version=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
            echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
            echo "previous_tag=$(git describe --tags --abbrev=0 ${{ github.event.release.tag_name }}^)" >> $GITHUB_OUTPUT
          else
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
            echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
            echo "previous_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
          fi
      
      - name: Generate changelog entry
        id: changelog
        run: |
          VERSION="${{ steps.release.outputs.version }}"
          DATE="${{ steps.release.outputs.date }}"
          PREVIOUS="${{ steps.release.outputs.previous_tag }}"
          
          echo "Generating changelog for $VERSION (from $PREVIOUS)"
          
          # Create temporary file for new entry
          cat > /tmp/new_entry.md << 'EOF'
          ## [$VERSION] - $DATE
          EOF
          
          # Categorize commits
          echo "### Added" >> /tmp/new_entry.md
          git log --pretty=format:"- %s" $PREVIOUS..$VERSION --grep="^Add" --grep="^Implement" --grep="^Create" | head -20 >> /tmp/new_entry.md || true
          
          echo -e "\n### Changed" >> /tmp/new_entry.md
          git log --pretty=format:"- %s" $PREVIOUS..$VERSION --grep="^Update" --grep="^Enhance" --grep="^Improve" | head -20 >> /tmp/new_entry.md || true
          
          echo -e "\n### Fixed" >> /tmp/new_entry.md
          git log --pretty=format:"- %s" $PREVIOUS..$VERSION --grep="^Fix" --grep="^Resolve" --grep="^Correct" | head -20 >> /tmp/new_entry.md || true
          
          echo -e "\n### Removed" >> /tmp/new_entry.md
          git log --pretty=format:"- %s" $PREVIOUS..$VERSION --grep="^Remove" --grep="^Delete" | head -10 >> /tmp/new_entry.md || true
          
          echo -e "\n### Security" >> /tmp/new_entry.md
          git log --pretty=format:"- %s" $PREVIOUS..$VERSION --grep="^Security" --grep="vulnerability" --grep="CVE" | head -10 >> /tmp/new_entry.md || true
          
          # Clean up empty sections
          sed -i '/^### Added$/,/^###/{/^### Added$/!{/^###/!d}}' /tmp/new_entry.md
          sed -i '/^### Changed$/,/^###/{/^### Changed$/!{/^###/!d}}' /tmp/new_entry.md
          sed -i '/^### Fixed$/,/^###/{/^### Fixed$/!{/^###/!d}}' /tmp/new_entry.md
          sed -i '/^### Removed$/,/^###/{/^### Removed$/!{/^###/!d}}' /tmp/new_entry.md
          sed -i '/^### Security$/,${/^### Security$/!d}' /tmp/new_entry.md
          
          # Remove empty sections
          awk '!/^### / || getline' /tmp/new_entry.md > /tmp/changelog_entry.md
          
          echo "Generated changelog entry:"
          cat /tmp/changelog_entry.md
      
      - name: Update CHANGELOG.md
        run: |
          VERSION="${{ steps.release.outputs.version }}"
          
          # Check if version already exists
          if grep -q "## \[$VERSION\]" mcp-server/CHANGELOG.md; then
            echo "Version $VERSION already in CHANGELOG.md, skipping"
            exit 0
          fi
          
          # Insert new entry after the header
          sed -i '7r /tmp/changelog_entry.md' mcp-server/CHANGELOG.md
          
          # Add comparison link
          PREVIOUS="${{ steps.release.outputs.previous_tag }}"
          echo "" >> mcp-server/CHANGELOG.md
          echo "[$VERSION]: https://github.com/${{ github.repository }}/compare/$PREVIOUS...$VERSION" >> mcp-server/CHANGELOG.md
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "chore: Update CHANGELOG for ${{ steps.release.outputs.version }}"
          title: "Update CHANGELOG for ${{ steps.release.outputs.version }}"
          body: |
            This PR updates the CHANGELOG.md file with entries for version ${{ steps.release.outputs.version }}.
            
            The changes were automatically generated from commit messages between ${{ steps.release.outputs.previous_tag }} and ${{ steps.release.outputs.version }}.
            
            Please review and merge to keep the changelog up to date.
          branch: changelog-${{ steps.release.outputs.version }}
          base: main
          delete-branch: true