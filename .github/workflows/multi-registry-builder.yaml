name: Multi-Registry Builder

on:
  push:
    branches:
      - main
    paths:
      - 'claude-ai-mcp/**'
      - '.github/workflows/multi-registry-builder.yaml'
  pull_request:
    branches:
      - main
    paths:
      - 'claude-ai-mcp/**'
  workflow_dispatch:
    inputs:
      push:
        description: 'Push images to registries'
        required: false
        default: 'false'

env:
  ADDON_NAME: claude-ai-mcp
  DOCKERHUB_REPO: mtebusi/ha-claude-ai-mcp
  GHCR_REPO: ghcr.io/mtebusi/addon-claude-ai-mcp

jobs:
  build:
    name: Build Multi-Registry Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, armhf, armv7, aarch64, i386]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get build arguments
        id: build_args
        run: |
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "BUILD_REF=${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "BUILD_VERSION=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
          
          # Map architecture names
          case "${{ matrix.arch }}" in
            amd64) DOCKER_ARCH="linux/amd64" ;;
            armhf) DOCKER_ARCH="linux/arm/v6" ;;
            armv7) DOCKER_ARCH="linux/arm/v7" ;;
            aarch64) DOCKER_ARCH="linux/arm64" ;;
            i386) DOCKER_ARCH="linux/386" ;;
          esac
          echo "DOCKER_ARCH=${DOCKER_ARCH}" >> $GITHUB_OUTPUT
          
          # Determine base image
          case "${{ matrix.arch }}" in
            amd64) BASE_IMAGE="ghcr.io/home-assistant/amd64-base:latest" ;;
            armhf) BASE_IMAGE="ghcr.io/home-assistant/armhf-base:latest" ;;
            armv7) BASE_IMAGE="ghcr.io/home-assistant/armv7-base:latest" ;;
            aarch64) BASE_IMAGE="ghcr.io/home-assistant/aarch64-base:latest" ;;
            i386) BASE_IMAGE="ghcr.io/home-assistant/i386-base:latest" ;;
          esac
          echo "BASE_IMAGE=${BASE_IMAGE}" >> $GITHUB_OUTPUT

      - name: Build and push to registries
        uses: docker/build-push-action@v5
        with:
          context: ./claude-ai-mcp
          file: ./claude-ai-mcp/Dockerfile
          platforms: ${{ steps.build_args.outputs.DOCKER_ARCH }}
          push: ${{ github.event_name != 'pull_request' || github.event.inputs.push == 'true' }}
          tags: |
            ${{ env.DOCKERHUB_REPO }}:${{ matrix.arch }}
            ${{ env.DOCKERHUB_REPO }}:${{ matrix.arch }}-${{ github.sha }}
            ${{ env.GHCR_REPO }}:${{ matrix.arch }}
            ${{ env.GHCR_REPO }}:${{ matrix.arch }}-${{ github.sha }}
          build-args: |
            BUILD_FROM=${{ steps.build_args.outputs.BASE_IMAGE }}
            BUILD_DATE=${{ steps.build_args.outputs.BUILD_DATE }}
            BUILD_ARCH=${{ matrix.arch }}
            BUILD_VERSION=${{ steps.build_args.outputs.BUILD_VERSION }}
            BUILD_REF=${{ steps.build_args.outputs.BUILD_REF }}
          cache-from: |
            type=registry,ref=${{ env.DOCKERHUB_REPO }}:buildcache-${{ matrix.arch }}
            type=registry,ref=${{ env.GHCR_REPO }}:buildcache-${{ matrix.arch }}
          cache-to: |
            type=registry,ref=${{ env.DOCKERHUB_REPO }}:buildcache-${{ matrix.arch }},mode=max
            type=registry,ref=${{ env.GHCR_REPO }}:buildcache-${{ matrix.arch }},mode=max
          labels: |
            org.opencontainers.image.title=Claude AI MCP Bridge
            org.opencontainers.image.description=Connect Claude Desktop to Home Assistant using Model Context Protocol
            org.opencontainers.image.vendor=Home Assistant Add-on
            org.opencontainers.image.authors=Matt Busi <me@mattbusi.com>
            org.opencontainers.image.licenses=Apache-2.0
            org.opencontainers.image.url=https://github.com/mtebusi/ha-mcp
            org.opencontainers.image.source=https://github.com/mtebusi/ha-mcp
            org.opencontainers.image.created=${{ steps.build_args.outputs.BUILD_DATE }}
            org.opencontainers.image.revision=${{ steps.build_args.outputs.BUILD_REF }}
            org.opencontainers.image.version=${{ steps.build_args.outputs.BUILD_VERSION }}

  manifest:
    name: Create Multi-Arch Manifests
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push Docker Hub manifest
        run: |
          docker manifest create ${{ env.DOCKERHUB_REPO }}:latest \
            ${{ env.DOCKERHUB_REPO }}:amd64 \
            ${{ env.DOCKERHUB_REPO }}:armhf \
            ${{ env.DOCKERHUB_REPO }}:armv7 \
            ${{ env.DOCKERHUB_REPO }}:aarch64 \
            ${{ env.DOCKERHUB_REPO }}:i386
          docker manifest push ${{ env.DOCKERHUB_REPO }}:latest
          
          docker manifest create ${{ env.DOCKERHUB_REPO }}:${{ github.sha }} \
            ${{ env.DOCKERHUB_REPO }}:amd64-${{ github.sha }} \
            ${{ env.DOCKERHUB_REPO }}:armhf-${{ github.sha }} \
            ${{ env.DOCKERHUB_REPO }}:armv7-${{ github.sha }} \
            ${{ env.DOCKERHUB_REPO }}:aarch64-${{ github.sha }} \
            ${{ env.DOCKERHUB_REPO }}:i386-${{ github.sha }}
          docker manifest push ${{ env.DOCKERHUB_REPO }}:${{ github.sha }}

      - name: Create and push GHCR manifest
        run: |
          docker manifest create ${{ env.GHCR_REPO }}:latest \
            ${{ env.GHCR_REPO }}:amd64 \
            ${{ env.GHCR_REPO }}:armhf \
            ${{ env.GHCR_REPO }}:armv7 \
            ${{ env.GHCR_REPO }}:aarch64 \
            ${{ env.GHCR_REPO }}:i386
          docker manifest push ${{ env.GHCR_REPO }}:latest
          
          docker manifest create ${{ env.GHCR_REPO }}:${{ github.sha }} \
            ${{ env.GHCR_REPO }}:amd64-${{ github.sha }} \
            ${{ env.GHCR_REPO }}:armhf-${{ github.sha }} \
            ${{ env.GHCR_REPO }}:armv7-${{ github.sha }} \
            ${{ env.GHCR_REPO }}:aarch64-${{ github.sha }} \
            ${{ env.GHCR_REPO }}:i386-${{ github.sha }}
          docker manifest push ${{ env.GHCR_REPO }}:${{ github.sha }}