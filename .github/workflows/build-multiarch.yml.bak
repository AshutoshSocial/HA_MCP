name: Multi-Architecture Docker Build

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      push_images:
        description: 'Push images to registry'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: addon-mcp-claude

jobs:
  build-multiarch:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=1.1.4

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-multiarch-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-multiarch-

      # Build for amd64
      - name: Build AMD64 image
        uses: docker/build-push-action@v5
        with:
          context: ./mcp-server
          file: ./mcp-server/Dockerfile
          platforms: linux/amd64
          build-args: |
            BUILD_FROM=ghcr.io/home-assistant/amd64-base:3.20
          push: ${{ github.event_name != 'pull_request' || github.event.inputs.push_images == 'true' }}
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:amd64-1.1.4
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Build for ARM64
      - name: Build ARM64 image
        uses: docker/build-push-action@v5
        with:
          context: ./mcp-server
          file: ./mcp-server/Dockerfile
          platforms: linux/arm64
          build-args: |
            BUILD_FROM=ghcr.io/home-assistant/aarch64-base:3.20
          push: ${{ github.event_name != 'pull_request' || github.event.inputs.push_images == 'true' }}
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:aarch64-1.1.4
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Build for ARMv7
      - name: Build ARMv7 image
        uses: docker/build-push-action@v5
        with:
          context: ./mcp-server
          file: ./mcp-server/Dockerfile
          platforms: linux/arm/v7
          build-args: |
            BUILD_FROM=ghcr.io/home-assistant/armv7-base:3.20
          push: ${{ github.event_name != 'pull_request' || github.event.inputs.push_images == 'true' }}
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:armv7-1.1.4
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Build for ARMhf
      - name: Build ARMhf image
        uses: docker/build-push-action@v5
        with:
          context: ./mcp-server
          file: ./mcp-server/Dockerfile
          platforms: linux/arm/v6
          build-args: |
            BUILD_FROM=ghcr.io/home-assistant/armhf-base:3.20
          push: ${{ github.event_name != 'pull_request' || github.event.inputs.push_images == 'true' }}
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:armhf-1.1.4
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Build for i386
      - name: Build i386 image
        uses: docker/build-push-action@v5
        with:
          context: ./mcp-server
          file: ./mcp-server/Dockerfile
          platforms: linux/386
          build-args: |
            BUILD_FROM=ghcr.io/home-assistant/i386-base:3.20
          push: ${{ github.event_name != 'pull_request' || github.event.inputs.push_images == 'true' }}
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:i386-1.1.4
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Create and push multi-arch manifest
      - name: Create and push multi-arch manifest
        if: github.event_name != 'pull_request' || github.event.inputs.push_images == 'true'
        run: |
          # Create the main versioned manifest
          docker buildx imagetools create \
            --tag ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:1.1.4 \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:amd64-1.1.4 \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:aarch64-1.1.4 \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:armv7-1.1.4 \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:armhf-1.1.4 \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:i386-1.1.4
          
          # Also tag as latest if on main branch
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            docker buildx imagetools create \
              --tag ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest \
              ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:amd64-1.1.4 \
              ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:aarch64-1.1.4 \
              ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:armv7-1.1.4 \
              ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:armhf-1.1.4 \
              ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:i386-1.1.4
          fi

      # Move cache
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Verify the images
      - name: Verify multi-arch support
        if: github.event_name != 'pull_request' || github.event.inputs.push_images == 'true'
        run: |
          echo "Inspecting manifest for multi-arch support:"
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:1.1.4