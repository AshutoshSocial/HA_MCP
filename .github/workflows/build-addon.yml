name: Build and Push Add-on

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mtebusi/addon-mcp-claude

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=1.2.0

      # Build architecture-specific images that Home Assistant expects

      - name: Build and push ARM64/aarch64 image
        uses: docker/build-push-action@v5
        with:
          context: ./mcp-server
          platforms: linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.2.0-aarch64
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-aarch64
          build-args: |
            BUILD_FROM=ghcr.io/home-assistant/aarch64-base:3.20
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push AMD64 image
        uses: docker/build-push-action@v5
        with:
          context: ./mcp-server
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.2.0-amd64
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-amd64
          build-args: |
            BUILD_FROM=ghcr.io/home-assistant/amd64-base:3.20
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push ARMv7 image
        uses: docker/build-push-action@v5
        with:
          context: ./mcp-server
          platforms: linux/arm/v7
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.2.0-armv7
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-armv7
          build-args: |
            BUILD_FROM=ghcr.io/home-assistant/armv7-base:3.20
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push ARMhf image
        uses: docker/build-push-action@v5
        with:
          context: ./mcp-server
          platforms: linux/arm/v6
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.2.0-armhf
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-armhf
          build-args: |
            BUILD_FROM=ghcr.io/home-assistant/armhf-base:3.20
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push i386 image
        uses: docker/build-push-action@v5
        with:
          context: ./mcp-server
          platforms: linux/386
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.2.0-i386
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-i386
          build-args: |
            BUILD_FROM=ghcr.io/home-assistant/i386-base:3.20
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Create multi-arch manifest
      - name: Create and push multi-arch manifest
        run: |
          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.2.0 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.2.0-aarch64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.2.0-amd64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.2.0-armv7 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.2.0-armhf \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.2.0-i386
          
          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:1.2.0
          
          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-aarch64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-amd64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-armv7 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-armhf \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-i386
          
          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest