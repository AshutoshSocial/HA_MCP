name: 'Docker Multi-arch Build'
description: 'Build multi-architecture Docker images for Home Assistant add-on'
inputs:
  context:
    description: 'Build context path'
    required: false
    default: './mcp-server'
  platforms:
    description: 'Target platforms (comma-separated)'
    required: false
    default: 'linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6,linux/386'
  push:
    description: 'Push images to registry'
    required: false
    default: 'false'
  registry:
    description: 'Container registry'
    required: false
    default: 'ghcr.io'
  image-name:
    description: 'Image name'
    required: true
  tags:
    description: 'Image tags (newline-separated)'
    required: true
  build-args:
    description: 'Build arguments (newline-separated)'
    required: false
    default: ''
  cache-key:
    description: 'Cache key for layer caching'
    required: false
    default: 'buildcache'

outputs:
  image-id:
    description: 'Image ID'
    value: ${{ steps.build.outputs.imageid }}
  digest:
    description: 'Image digest'
    value: ${{ steps.build.outputs.digest }}
  metadata:
    description: 'Build metadata'
    value: ${{ steps.build.outputs.metadata }}

runs:
  using: 'composite'
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: all
    
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=moby/buildkit:master
          network=host
        config-inline: |
          [worker.oci]
            max-parallelism = 4
    
    - name: Configure build cache
      shell: bash
      run: |
        echo "CACHE_FROM=type=registry,ref=${{ inputs.registry }}/${{ inputs.image-name }}:${{ inputs.cache-key }}" >> $GITHUB_ENV
        echo "CACHE_TO=type=registry,ref=${{ inputs.registry }}/${{ inputs.image-name }}:${{ inputs.cache-key }},mode=max" >> $GITHUB_ENV
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ inputs.image-name }}
        tags: ${{ inputs.tags }}
    
    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        platforms: ${{ inputs.platforms }}
        push: ${{ inputs.push }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: ${{ env.CACHE_FROM }}
        cache-to: ${{ env.CACHE_TO }}
        build-args: ${{ inputs.build-args }}
        provenance: false
        sbom: false
    
    - name: Generate build summary
      shell: bash
      run: |
        echo "## Docker Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Image**: ${{ inputs.registry }}/${{ inputs.image-name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Platforms**: ${{ inputs.platforms }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Push**: ${{ inputs.push }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Digest**: ${{ steps.build.outputs.digest }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Tags" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY