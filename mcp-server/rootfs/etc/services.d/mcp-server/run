#!/usr/bin/with-contenv bashio
# ==============================================================================
# Start the MCP Server service
# ==============================================================================

# Get configuration from add-on options
declare port
declare log_level
declare connection_timeout
declare max_clients
declare enable_entity_filtering
declare allowed_domains
declare blocked_entities

port=$(bashio::config 'port')
log_level=$(bashio::config 'log_level')
connection_timeout=$(bashio::config 'connection_timeout')
max_clients=$(bashio::config 'max_clients')
enable_entity_filtering=$(bashio::config 'enable_entity_filtering')

# Get HomeAssistant connection info
export SUPERVISOR_TOKEN="${SUPERVISOR_TOKEN}"
export HA_BASE_URL="http://supervisor/core"
export PORT="${port}"
export CONNECTION_MODE="sse"
export AUTHENTICATION_MODE="ha_oauth2"
export LOG_LEVEL="${log_level}"
export CONNECTION_TIMEOUT="${connection_timeout}"
export MAX_CLIENTS="${max_clients}"
export ENABLE_ENTITY_FILTERING="${enable_entity_filtering}"

# Handle array configs
if bashio::config.has_value 'allowed_domains'; then
    ALLOWED_DOMAINS=$(bashio::config 'allowed_domains' | jq -r 'join(",")')
    export ALLOWED_DOMAINS
fi

if bashio::config.has_value 'blocked_entities'; then
    BLOCKED_ENTITIES=$(bashio::config 'blocked_entities' | jq -r 'join(",")')
    export BLOCKED_ENTITIES
fi

bashio::log.info "Starting MCP Server for Claude v1.1.3..."
bashio::log.info "Port: ${port}"
bashio::log.info "Connection Mode: SSE (Server-Sent Events)"
bashio::log.info "Authentication: HomeAssistant OAuth2"

# Start the Node.js application
cd /app || exit 1
exec node dist/index.js