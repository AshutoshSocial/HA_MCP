#!/usr/bin/with-contenv bashio
# ==============================================================================
# Start the MCP Server service
# ==============================================================================

# Wait for init to complete
bashio::log.info "MCP Server service starting..."

# Get configuration from add-on options
port=$(bashio::config 'port')
log_level=$(bashio::config 'log_level')
connection_timeout=$(bashio::config 'connection_timeout')
max_clients=$(bashio::config 'max_clients')
enable_entity_filtering=$(bashio::config 'enable_entity_filtering')

# Verify supervisor token is available
if [[ -z "${SUPERVISOR_TOKEN}" ]]; then
    bashio::log.error "Supervisor token not found!"
    exit 1
fi

# Set environment variables for the Node.js application
export SUPERVISOR_TOKEN="${SUPERVISOR_TOKEN}"
export HASSIO_TOKEN="${SUPERVISOR_TOKEN}"
export HA_BASE_URL="http://supervisor/core"
export HOMEASSISTANT_URL="http://supervisor/core"
export PORT="${port}"
export PORT_SSE="${port}"
export CONNECTION_MODE="sse"
export AUTHENTICATION_MODE="supervisor"
export LOG_LEVEL="${log_level}"
export CONNECTION_TIMEOUT="${connection_timeout}"
export MAX_CLIENTS="${max_clients}"
export ENABLE_ENTITY_FILTERING="${enable_entity_filtering}"

# Handle array configs for filtering
if bashio::config.has_value 'allowed_domains'; then
    ALLOWED_DOMAINS=$(bashio::config 'allowed_domains' | jq -r 'join(",")')
    export ALLOWED_DOMAINS
    bashio::log.info "Domain filtering enabled: ${ALLOWED_DOMAINS}"
fi

if bashio::config.has_value 'blocked_entities'; then
    BLOCKED_ENTITIES=$(bashio::config 'blocked_entities' | jq -r 'join(",")')
    export BLOCKED_ENTITIES
    bashio::log.info "Entity blocking enabled: ${BLOCKED_ENTITIES}"
fi

bashio::log.info "Starting MCP Server for Claude v1.2.1..."
bashio::log.info "Port: ${port}"
bashio::log.info "Log Level: ${log_level}"
bashio::log.info "Connection Mode: SSE (Server-Sent Events)"
bashio::log.info "Max Clients: ${max_clients}"
bashio::log.info "Connection Timeout: ${connection_timeout}ms"

# Change to app directory
cd /app || exit 1

# Start the Node.js application with proper signal handling
bashio::log.info "Starting Node.js application..."
exec node dist/index.js